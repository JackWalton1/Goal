@using EventDatabaseManagement
﻿@using StateManager
@inject NavigationManager nav

<MudCard Elevation="25" Class="d-flex pa-4 align-content-center rounded-lg">
    <MudStack>
        <MudItem Class="d-flex justify-space-between flex-grow-1">
            <MudText Typo="Typo.h6" Align="Align.Left">@currentEvent.Title</MudText>
            <MudIcon Icon="@currentEvent.Icon" Align="center" />
        </MudItem>
        <MudImage ObjectFit="ObjectFit.Cover" Class="rounded-lg" Src=@currentEvent.ImageURL Width="300" Height="150" />
        <MudItem Class="d-flex justify-space-between flex-grow-1">
            <MudText Typo="Typo.subtitle1" Align="Align.Left">@currentEvent.VenueName</MudText>
            <MudText Typo="Typo.subtitle1" Align="Align.Right">@currentEvent.Date.Substring(0, currentEvent.Date.IndexOf(' '))</MudText>
        </MudItem>
        <MudButton OnClick="goToEventDisplay" Variant=Variant.Filled Align="center" Size="Size.Large" EndIcon="@Icons.Material.Filled.ChevronRight" FullWidth="true">Learn more</MudButton>
        @if (StateManager.CurrentUser != null)
            {
            <MudButton Align="center" OnClick="updateFollow">
                @if (following)
                    {
                    <MudText>unfollow</MudText>
                    }
                    else
                    {
                    <MudText>follow</MudText>
                    }
            </MudButton>
            }
    </MudStack>
</MudCard>

@code {
    [Parameter]
    public EventModel currentEvent { get; set; }

    public bool following = false;

    async Task updateFollow()
    {
        if (following == false)
        {
            following = true;
        }
        else
        {
            following = false;
        }
    }

    async Task goToEventDisplay()
    {
        StateManager.CurrentEvent = currentEvent;
        nav.NavigateTo("/eventDescription");
    }
}